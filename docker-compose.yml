services:
  api-migrations:
    container_name: observatorio-api-migrations
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    depends_on:
      db:
        condition: service_healthy
    environment:
      - ConnectionStrings__DefaultConnection=Server=db;Port=5432;Database=observatorio_db;User Id=postgres;Password=12345;
    command: >
      /bin/sh -c "
        set -e;
        echo 'Aguardando o banco de dados ficar 100% pronto...';
        sleep 5;
        echo 'Aplicando as migrations...';
        /tools/dotnet-ef database update;
        echo 'Migrations aplicadas com sucesso.';
      "

  api:
    container_name: observatorio-api
    build:
      context: .
      dockerfile: Dockerfile
      target: final
    ports:
      - "8080:8080"
    environment:
      - ConnectionStrings__DefaultConnection=Server=db;Port=5432;Database=observatorio_db;User Id=postgres;Password=12345;
      - ASPNETCORE_ENVIRONMENT=Docker
    depends_on:
      api-migrations:
        condition: service_completed_successfully

  db:
    container_name: observatorio-db
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=observatorio_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d observatorio_db"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
