version: 2.1
orbs:
  windows: circleci/windows@5.0.0

jobs:
  build-and-test:
    executor:
      name: windows/default
    steps:
      - checkout

      - restore_cache:
          keys:
            - nuget-packages-{{ checksum "observatorio.saude.sln" }}
            - nuget-packages-

      - run:
          name: Restore NuGet Packages
          command: dotnet restore observatorio.saude.sln

      - save_cache:
          paths:
            - ~/.nuget/packages
          key: nuget-packages-{{ checksum "observatorio.saude.sln" }}

      - run:
          name: Build Solution
          command: dotnet build observatorio.saude.sln --configuration Release --no-restore

      - run:
          name: Install ReportGenerator Tool
          command: dotnet tool install --global dotnet-reportgenerator-globaltool --version "5.2.0"

      - run:
          name: Run Tests and Generate TRX Report
          command: dotnet test --no-build --configuration Release --logger "trx" --collect:"XPlat Code Coverage"

      - run:
          name: Convert TRX to JUnit XML
          when: always
          command: |
            dotnet tool install --global trx2junit
            mkdir JunitResults
            $trxFile = (Get-ChildItem -Recurse -Filter *.trx | Select-Object -First 1).FullName
            if ($trxFile) {
              trx2junit $trxFile --output JunitResults
            } else {
              Write-Host "No .trx file found. Skipping conversion."
            }

      - run:
          name: Generate HTML Coverage Report
          command: |
            $coverageFiles = (Get-ChildItem -Recurse -Filter coverage.cobertura.xml).FullName
            if ($coverageFiles) {
              $reportsArg = $coverageFiles -join ';'
              reportgenerator "-reports:$reportsArg" "-targetdir:CoverageReport" "-reporttypes:Html"
            } else {
              Write-Host "No coverage file found. Skipping report generation."
            }
          when: always
      
      - store_test_results:
          path: JunitResults

      - store_artifacts:
          path: CoverageReport
          destination: coverage-report

      - store_artifacts:
          path: TestResults
          destination: raw-test-results

workflows:
  version: 2
  ci:
    jobs:
      - build-and-test
